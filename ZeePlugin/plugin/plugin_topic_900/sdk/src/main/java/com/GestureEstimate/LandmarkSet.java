/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.GestureEstimate;

public class LandmarkSet {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected LandmarkSet(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LandmarkSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GestureEstimateJNI.delete_LandmarkSet(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setBody(Point3fList value) {
    GestureEstimateJNI.LandmarkSet_body_set(swigCPtr, this, Point3fList.getCPtr(value), value);
  }

  public Point3fList getBody() {
    long cPtr = GestureEstimateJNI.LandmarkSet_body_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Point3fList(cPtr, false);
  }

  public void setLeft(Point3fList value) {
    GestureEstimateJNI.LandmarkSet_left_set(swigCPtr, this, Point3fList.getCPtr(value), value);
  }

  public Point3fList getLeft() {
    long cPtr = GestureEstimateJNI.LandmarkSet_left_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Point3fList(cPtr, false);
  }

  public void setRight(Point3fList value) {
    GestureEstimateJNI.LandmarkSet_right_set(swigCPtr, this, Point3fList.getCPtr(value), value);
  }

  public Point3fList getRight() {
    long cPtr = GestureEstimateJNI.LandmarkSet_right_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Point3fList(cPtr, false);
  }

  public LandmarkSet() {
    this(GestureEstimateJNI.new_LandmarkSet(), true);
  }

}
