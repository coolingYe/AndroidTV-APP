/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.GestureEstimate;

public final class ActionPoseV2Enum {
  public final static ActionPoseV2Enum Running = new ActionPoseV2Enum("Running");
  public final static ActionPoseV2Enum Standing = new ActionPoseV2Enum("Standing");
  public final static ActionPoseV2Enum Walking = new ActionPoseV2Enum("Walking");
  public final static ActionPoseV2Enum Jumping = new ActionPoseV2Enum("Jumping");
  public final static ActionPoseV2Enum Unkonwn = new ActionPoseV2Enum("Unkonwn");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static ActionPoseV2Enum swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + ActionPoseV2Enum.class + " with value " + swigValue);
  }

  private ActionPoseV2Enum(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private ActionPoseV2Enum(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private ActionPoseV2Enum(String swigName, ActionPoseV2Enum swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static ActionPoseV2Enum[] swigValues = { Running, Standing, Walking, Jumping, Unkonwn };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

