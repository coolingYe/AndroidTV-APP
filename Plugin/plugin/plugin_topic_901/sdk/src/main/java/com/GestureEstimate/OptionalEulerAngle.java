/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.GestureEstimate;

public class OptionalEulerAngle {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OptionalEulerAngle(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptionalEulerAngle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GestureEstimateJNI.delete_OptionalEulerAngle(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public OptionalEulerAngle() {
    this(GestureEstimateJNI.new_OptionalEulerAngle__SWIG_0(), true);
  }

  public OptionalEulerAngle(FaceEulerAngle value) {
    this(GestureEstimateJNI.new_OptionalEulerAngle__SWIG_1(FaceEulerAngle.getCPtr(value), value), true);
  }

  public OptionalEulerAngle(OptionalEulerAngle other) {
    this(GestureEstimateJNI.new_OptionalEulerAngle__SWIG_2(OptionalEulerAngle.getCPtr(other), other), true);
  }

  public OptionalEulerAngle assign(FaceEulerAngle value) {
    return new OptionalEulerAngle(GestureEstimateJNI.OptionalEulerAngle_assign__SWIG_0(swigCPtr, this, FaceEulerAngle.getCPtr(value), value), false);
  }

  public OptionalEulerAngle assign(OptionalEulerAngle other) {
    return new OptionalEulerAngle(GestureEstimateJNI.OptionalEulerAngle_assign__SWIG_1(swigCPtr, this, OptionalEulerAngle.getCPtr(other), other), false);
  }

  public void swap(OptionalEulerAngle other) {
    GestureEstimateJNI.OptionalEulerAngle_swap(swigCPtr, this, OptionalEulerAngle.getCPtr(other), other);
  }

  public FaceEulerAngle value() {
    return new FaceEulerAngle(GestureEstimateJNI.OptionalEulerAngle_value(swigCPtr, this), false);
  }

  public FaceEulerAngle value_or(FaceEulerAngle deflt) {
    return new FaceEulerAngle(GestureEstimateJNI.OptionalEulerAngle_value_or(swigCPtr, this, FaceEulerAngle.getCPtr(deflt), deflt), false);
  }

  public boolean is_specified() {
    return GestureEstimateJNI.OptionalEulerAngle_is_specified(swigCPtr, this);
  }

  public void clear() {
    GestureEstimateJNI.OptionalEulerAngle_clear(swigCPtr, this);
  }

}
