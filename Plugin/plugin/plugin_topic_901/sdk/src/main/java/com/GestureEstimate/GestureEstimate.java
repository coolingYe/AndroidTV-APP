/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.GestureEstimate;

public class GestureEstimate {
  public static GestureEstimateVersion get_version() {
    return new GestureEstimateVersion(GestureEstimateJNI.get_version(), true);
  }

  public static String get_version_string() {
    return GestureEstimateJNI.get_version_string();
  }

  public static void set_kpt_version(KptVersion v) {
    GestureEstimateJNI.set_kpt_version(v.swigValue());
  }

  public static void set_valid_frame_config(boolean check_frame, float width, float height) {
    GestureEstimateJNI.set_valid_frame_config__SWIG_0(check_frame, width, height);
  }

  public static void set_valid_frame_config(boolean check_frame, float width) {
    GestureEstimateJNI.set_valid_frame_config__SWIG_1(check_frame, width);
  }

  public static void set_valid_frame_config(boolean check_frame) {
    GestureEstimateJNI.set_valid_frame_config__SWIG_2(check_frame);
  }

  public static void set_valid_frame_config() {
    GestureEstimateJNI.set_valid_frame_config__SWIG_3();
  }

  public static HandPoseEnum HandPoseFromLandmark(Point3fList kpts) {
    return HandPoseEnum.swigToEnum(GestureEstimateJNI.HandPoseFromLandmark(Point3fList.getCPtr(kpts), kpts));
  }

  public static FloatList GetHandAngle(Point3fList kpts) {
    return new FloatList(GestureEstimateJNI.GetHandAngle(Point3fList.getCPtr(kpts), kpts), true);
  }

  public static String HandPoseEnumToString(HandPoseEnum pose) {
    return GestureEstimateJNI.HandPoseEnumToString(pose.swigValue());
  }

  public static String ActionPoseEnumToString(ActionPoseEnum pose) {
    return GestureEstimateJNI.ActionPoseEnumToString(pose.swigValue());
  }

  public static Point3f GetValidPointFromLastPoint(Point3f point, Point3f last_point) {
    return new Point3f(GestureEstimateJNI.GetValidPointFromLastPoint(Point3f.getCPtr(point), point, Point3f.getCPtr(last_point), last_point), true);
  }

  public static Point3f GetValidPointFromCache(Point3f point, Point3fList points) {
    return new Point3f(GestureEstimateJNI.GetValidPointFromCache(Point3f.getCPtr(point), point, Point3fList.getCPtr(points), points), true);
  }

  public static Point3fList GetValidPoseFromBodyCache(Point3fList pose, SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t poses) {
    return new Point3fList(GestureEstimateJNI.GetValidPoseFromBodyCache(Point3fList.getCPtr(pose), pose, SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t.getCPtr(poses)), true);
  }

  public static boolean IsExistUpTrend(Point3fList pts, float body_up_height, float up_thres) {
    return GestureEstimateJNI.IsExistUpTrend__SWIG_0(Point3fList.getCPtr(pts), pts, body_up_height, up_thres);
  }

  public static boolean IsExistUpTrend(Point3fList pts, float body_up_height, int start_index, float up_thres, int up_max_count) {
    return GestureEstimateJNI.IsExistUpTrend__SWIG_1(Point3fList.getCPtr(pts), pts, body_up_height, start_index, up_thres, up_max_count);
  }

  public static boolean IsExistDownTrend(Point3fList pts, float body_up_height, float down_thres) {
    return GestureEstimateJNI.IsExistDownTrend__SWIG_0(Point3fList.getCPtr(pts), pts, body_up_height, down_thres);
  }

  public static boolean IsExistDownTrend(Point3fList pts, float body_up_height, int start_index, float down_thres, int down_max_count) {
    return GestureEstimateJNI.IsExistDownTrend__SWIG_1(Point3fList.getCPtr(pts), pts, body_up_height, start_index, down_thres, down_max_count);
  }

  public static int GetPointUpCount(Point3fList pts, float body_up_height, float chg_thres) {
    return GestureEstimateJNI.GetPointUpCount__SWIG_0(Point3fList.getCPtr(pts), pts, body_up_height, chg_thres);
  }

  public static int GetPointUpCount(Point3fList pts, float body_up_height, int start_index, float chg_thres, int chg_max_count) {
    return GestureEstimateJNI.GetPointUpCount__SWIG_1(Point3fList.getCPtr(pts), pts, body_up_height, start_index, chg_thres, chg_max_count);
  }

  public static int GetPointDownCount(Point3fList pts, float body_up_height, float chg_thres) {
    return GestureEstimateJNI.GetPointDownCount__SWIG_0(Point3fList.getCPtr(pts), pts, body_up_height, chg_thres);
  }

  public static int GetPointDownCount(Point3fList pts, float body_up_height, int start_index, float chg_thres, int chg_max_count) {
    return GestureEstimateJNI.GetPointDownCount__SWIG_1(Point3fList.getCPtr(pts), pts, body_up_height, start_index, chg_thres, chg_max_count);
  }

  public static int GetPointUpDownCount(Point3fList pts, float body_up_height, float chg_thres) {
    return GestureEstimateJNI.GetPointUpDownCount(Point3fList.getCPtr(pts), pts, body_up_height, chg_thres);
  }

  public static int GetFootChgCount(SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t poses, float body_up_height, float chg_thres) {
    return GestureEstimateJNI.GetFootChgCount(SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t.getCPtr(poses), body_up_height, chg_thres);
  }

  public static FloatList GetMinMaxX(Point3fList pts, boolean dis_negative) {
    return new FloatList(GestureEstimateJNI.GetMinMaxX__SWIG_0(Point3fList.getCPtr(pts), pts, dis_negative), true);
  }

  public static FloatList GetMinMaxX(Point3fList pts, int start_index, int end_index, boolean dis_negative) {
    return new FloatList(GestureEstimateJNI.GetMinMaxX__SWIG_1(Point3fList.getCPtr(pts), pts, start_index, end_index, dis_negative), true);
  }

  public static FloatList GetMinMaxY(Point3fList pts, boolean dis_negative) {
    return new FloatList(GestureEstimateJNI.GetMinMaxY__SWIG_0(Point3fList.getCPtr(pts), pts, dis_negative), true);
  }

  public static FloatList GetMinMaxY(Point3fList pts, int start_index, int end_index, boolean dis_negative) {
    return new FloatList(GestureEstimateJNI.GetMinMaxY__SWIG_1(Point3fList.getCPtr(pts), pts, start_index, end_index, dis_negative), true);
  }

  public static Point3f DealExpandFramePoint(Point3f point, float width, float height) {
    return new Point3f(GestureEstimateJNI.DealExpandFramePoint__SWIG_0(Point3f.getCPtr(point), point, width, height), true);
  }

  public static Point3fList DealExpandFramePoint(Point3fList pts, float width, float height) {
    return new Point3fList(GestureEstimateJNI.DealExpandFramePoint__SWIG_1(Point3fList.getCPtr(pts), pts, width, height), true);
  }

  public static SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t DealExpandFramePoint(SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t pts, float width, float height) {
    return new SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t(GestureEstimateJNI.DealExpandFramePoint__SWIG_2(SWIGTYPE_p_std__vectorT_std__vectorT_cv__Point3_T_float_t_t_t.getCPtr(pts), width, height), true);
  }

  public static boolean IsExistExpandFramePoint(Point3fList pts, float width, float height) {
    return GestureEstimateJNI.IsExistExpandFramePoint(Point3fList.getCPtr(pts), pts, width, height);
  }

}
