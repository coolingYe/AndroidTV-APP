/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.GestureEstimate;

public class MotionCallback {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected MotionCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MotionCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GestureEstimateJNI.delete_MotionCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean onAction(ActionPoseEnum pose) {
    return GestureEstimateJNI.MotionCallback_onAction(swigCPtr, this, pose.swigValue());
  }

  public boolean onActionV2(ActionPoseV2Enum action_gesture) {
    return GestureEstimateJNI.MotionCallback_onActionV2(swigCPtr, this, action_gesture.swigValue());
  }

  public boolean onHandsUp(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onHandsUp(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onArmCross(float x, float y) {
    return GestureEstimateJNI.MotionCallback_onArmCross(swigCPtr, this, x, y);
  }

  public boolean onStaticHand(HandPoseEnum left, HandPoseEnum right) {
    return GestureEstimateJNI.MotionCallback_onStaticHand(swigCPtr, this, left.swigValue(), right.swigValue());
  }

  public boolean onHandsUpAndFist() {
    return GestureEstimateJNI.MotionCallback_onHandsUpAndFist(swigCPtr, this);
  }

  public boolean onTwoFingerSliding(Hand left_or_right, int distance_x, int distance_y) {
    return GestureEstimateJNI.MotionCallback_onTwoFingerSliding(swigCPtr, this, left_or_right.swigValue(), distance_x, distance_y);
  }

  public boolean onQuiet(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onQuiet(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onPunching(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onPunching(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onFistBump() {
    return GestureEstimateJNI.MotionCallback_onFistBump(swigCPtr, this);
  }

  public boolean onZoom(float diff) {
    return GestureEstimateJNI.MotionCallback_onZoom(swigCPtr, this, diff);
  }

  public boolean onWaweHand(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onWaweHand(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onFlipPalm(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onFlipPalm(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onClapHands() {
    return GestureEstimateJNI.MotionCallback_onClapHands(swigCPtr, this);
  }

  public boolean onTranslateFist(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onTranslateFist(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onLateralRaise(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onLateralRaise(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onArmDown(Hand hand, int distance_x, int distance_y) {
    return GestureEstimateJNI.MotionCallback_onArmDown(swigCPtr, this, hand.swigValue(), distance_x, distance_y);
  }

  public boolean onCloseOpen() {
    return GestureEstimateJNI.MotionCallback_onCloseOpen(swigCPtr, this);
  }

  public boolean onDrag(Hand left_or_right) {
    return GestureEstimateJNI.MotionCallback_onDrag(swigCPtr, this, left_or_right.swigValue());
  }

  public boolean onTwoIndexFingerRect(int x, int y, int width, int height) {
    return GestureEstimateJNI.MotionCallback_onTwoIndexFingerRect(swigCPtr, this, x, y, width, height);
  }

  public boolean onPalmCenterUp(boolean left, boolean right) {
    return GestureEstimateJNI.MotionCallback_onPalmCenterUp(swigCPtr, this, left, right);
  }

  public boolean onPrayer() {
    return GestureEstimateJNI.MotionCallback_onPrayer(swigCPtr, this);
  }

  public boolean onHeart3() {
    return GestureEstimateJNI.MotionCallback_onHeart3(swigCPtr, this);
  }

  public boolean onHoldFace() {
    return GestureEstimateJNI.MotionCallback_onHoldFace(swigCPtr, this);
  }

  public MotionCallback() {
    this(GestureEstimateJNI.new_MotionCallback(), true);
  }

}
