/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.GestureEstimate;

public class SlipV3Detector {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SlipV3Detector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SlipV3Detector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GestureEstimateJNI.delete_SlipV3Detector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SlipV3Detector() {
    this(GestureEstimateJNI.new_SlipV3Detector(), true);
  }

  public void InputInfoParam(Point3fList pose, Point3fList left, Point3fList right) {
    GestureEstimateJNI.SlipV3Detector_InputInfoParam(swigCPtr, this, Point3fList.getCPtr(pose), pose, Point3fList.getCPtr(left), left, Point3fList.getCPtr(right), right);
  }

  public SlipEnum OnLeftHand() {
    return SlipEnum.swigToEnum(GestureEstimateJNI.SlipV3Detector_OnLeftHand(swigCPtr, this));
  }

  public SlipEnum OnRightHand() {
    return SlipEnum.swigToEnum(GestureEstimateJNI.SlipV3Detector_OnRightHand(swigCPtr, this));
  }

  public void SetWristHorizontalWaveParam(ZwnHorizontalWaveConfig config) {
    GestureEstimateJNI.SlipV3Detector_SetWristHorizontalWaveParam(swigCPtr, this, ZwnHorizontalWaveConfig.getCPtr(config), config);
  }

  public void SetWristVerticalWaveParam(ZwnVerticalWaveConfig config) {
    GestureEstimateJNI.SlipV3Detector_SetWristVerticalWaveParam(swigCPtr, this, ZwnVerticalWaveConfig.getCPtr(config), config);
  }

  public void SetWristCommonWaveParam(ZwnWaveCommonConfig config) {
    GestureEstimateJNI.SlipV3Detector_SetWristCommonWaveParam(swigCPtr, this, ZwnWaveCommonConfig.getCPtr(config), config);
  }

  public void SetSlipV3CheckBodyMoveThres(boolean dis_body_move, float body_horizontal_move_thres, float body_vertical_move_thres) {
    GestureEstimateJNI.SlipV3Detector_SetSlipV3CheckBodyMoveThres(swigCPtr, this, dis_body_move, body_horizontal_move_thres, body_vertical_move_thres);
  }

  public void ResetData() {
    GestureEstimateJNI.SlipV3Detector_ResetData(swigCPtr, this);
  }

}
